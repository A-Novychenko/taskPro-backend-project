{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Task PRO",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{"url": "https://taskproapi.onrender.com"}],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "User creation error.",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "parameters": [],
        "security": [{"Bearer": []}],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User is logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Login error.",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get information about the current user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user."
          }
        ],

        "responses": {
          "200": {
            "description": "Information found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token."
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "project5"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "project5@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's name",
            "example": "project5555555"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "project5"
          }
        },

        "example": {"email": "project5@mail.com", "name": "project5"}
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "project5@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's name",
            "example": "project5555555"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "649732379ad5cfa7a5c5179b"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "project5"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "project5@mail.com"
          },
          "thema": {
            "type": "string",
            "description": "User's thema - [dark, light, violet]",
            "example": "dark"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "www.gravatar.com/avatar/0f34fefc5bc8c472a716e7b3dbd41682"
          },
          "token": {
            "type": "string",
            "description": "Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "User's data",
            "properties": {
              "status": {
                "type": "string",
                "description": "User's avatar",
                "example": "OK"
              },
              "code": {
                "type": "integer",
                "description": "Code",
                "example": "200"
              },
              "token": {
                "type": "string",
                "description": "Bearer token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              },
              "user": {
                "type": "object",
                "description": "User data",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email",
                    "example": "Mango@mail.com"
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "example": "Mango"
                  },
                  "thema": {
                    "type": "string",
                    "description": "thema",
                    "example": "violet"
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "avatarURL",
                    "example": "//www.gravatar.com/avatar/cb7969c38a80489e114749a256e14a32"
                  }
                }
              }
            }
          }
        },

        "example": {"email": "project5@mail.com", "name": "project5"}
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
